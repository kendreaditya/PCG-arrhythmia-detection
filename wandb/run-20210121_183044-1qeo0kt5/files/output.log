GPU available: True, used: True
TPU available: None, using: 0 TPU cores
LOCAL_RANK: 0 - CUDA_VISIBLE_DEVICES: [0]
Using native 16bit precision.

  | Name      | Type             | Params
-----------------------------------------------
0 | criterion | CrossEntropyLoss | 0     
1 | dense1    | Linear           | 164 K 
2 | dense2    | Linear           | 1.0 K 
-----------------------------------------------
165 K     Trainable params
0         Non-trainable params
165 K     Total params
Validation sanity check: 0it [00:00, ?it/s]Traceback (most recent call last):
  File ".\src\models\CNN.py", line 75, in <module>
    train()
  File ".\src\models\CNN.py", line 66, in train
    trainer.fit(model, train_dataloader, validation_dataloader)
  File "C:\ProgramData\Miniconda3\lib\site-packages\pytorch_lightning\trainer\trainer.py", line 473, in fit
    results = self.accelerator_backend.train()
  File "C:\ProgramData\Miniconda3\lib\site-packages\pytorch_lightning\accelerators\gpu_accelerator.py", line 66, in train
    results = self.train_or_test()
  File "C:\ProgramData\Miniconda3\lib\site-packages\pytorch_lightning\accelerators\accelerator.py", line 69, in train_or_test
    results = self.trainer.train()
  File "C:\ProgramData\Miniconda3\lib\site-packages\pytorch_lightning\trainer\trainer.py", line 495, in train
    self.run_sanity_check(self.get_model())
  File "C:\ProgramData\Miniconda3\lib\site-packages\pytorch_lightning\trainer\trainer.py", line 693, in run_sanity_check
    _, eval_results = self.run_evaluation(test_mode=False, max_batches=self.num_sanity_val_batches)
  File "C:\ProgramData\Miniconda3\lib\site-packages\pytorch_lightning\trainer\trainer.py", line 609, in run_evaluation
    output = self.evaluation_loop.evaluation_step(test_mode, batch, batch_idx, dataloader_idx)
  File "C:\ProgramData\Miniconda3\lib\site-packages\pytorch_lightning\trainer\evaluation_loop.py", line 178, in evaluation_step
    output = self.trainer.accelerator_backend.validation_step(args)
  File "C:\ProgramData\Miniconda3\lib\site-packages\pytorch_lightning\accelerators\gpu_accelerator.py", line 84, in validation_step
    return self._step(self.trainer.model.validation_step, args)
  File "C:\ProgramData\Miniconda3\lib\site-packages\pytorch_lightning\accelerators\gpu_accelerator.py", line 74, in _step
    output = model_step(*args)
  File "K:\OneDrive - Cumberland Valley School District\Education\Activates\Science Fair\PCG-Science-Fair\PCG-arrhythmia-detection\src\models\pblm.py", line 60, in validation_step
    outputs = self.forward(data)
  File ".\src\models\CNN.py", line 33, in forward
    X = self.block([1, 16])(X)
  File "C:\ProgramData\Miniconda3\lib\site-packages\torch\nn\modules\module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "C:\ProgramData\Miniconda3\lib\site-packages\torch\nn\modules\container.py", line 117, in forward
    input = module(input)
  File "C:\ProgramData\Miniconda3\lib\site-packages\torch\nn\modules\module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "C:\ProgramData\Miniconda3\lib\site-packages\torch\nn\modules\conv.py", line 258, in forward
    return F.conv1d(input, self.weight, self.bias, self.stride,
RuntimeError: Expected 3-dimensional input for 3-dimensional weight [16, 1, 16], but got 2-dimensional input of size [256, 400] instead
